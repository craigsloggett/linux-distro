#!/bin/sh -e
#
# Cross Tools - Build gcc

BUILD_DEST_DIR=/tools  # A place to store compiled binaries.
BUILD_USER=build
BUILD_ROOT_DIR="${STAGE1_ROOT_DIR:-}"

VERSION="10.1.0"

TARGET_TRIPLET="${STAGE1_TARGET:-}"

cd "${BUILD_ROOT_DIR}"/source

# Download from upstream.
wget https://gcc.gnu.org/pub/gcc/releases/gcc-"${VERSION}"/gcc-"${VERSION}".tar.xz
xz -d gcc-"${VERSION}".tar.xz
tar -xf gcc-"${VERSION}".tar

# Prepare GMP, MPFR and MPC.
wget https://ftp.gnu.org/gnu/mpfr/mpfr-4.0.2.tar.xz
wget https://gmplib.org/download/gmp/gmp-6.2.0.tar.xz
wget https://ftp.gnu.org/gnu/mpc/mpc-1.1.0.tar.gz

xz -d mpfr-4.0.2.tar.xz
xz -d gmp-6.2.0.tar.xz
gunzip mpc-1.1.0.tar.gz

tar -xf mpfr-4.0.2.tar
tar -xf gmp-6.2.0.tar
tar -xf mpc-1.1.0.tar

cd gcc-"${VERSION}"

mv ../mpfr-4.0.2 mpfr
mv ../gmp-6.2.0 gmp
mv ../mpc-1.1.0 mpc

# Change the default linker to use the binutils compiled for this build.
for file in `find gcc/config -name linux64.h -o -name linux.h -o -name sysv4.h`; do
  echo "${file}"
  sed -i -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' \
         -e 's@/usr@/tools@g' "${file}"
  echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> "${file}"
done

# Set the default directory name for 64-bit libraries to “lib”.
sed -i -e '/m64=/s/lib64/lib/' gcc/config/i386/t-linux64

cd ..

# Prepare the build folder.
mkdir -v build && cd build

# Configure the source.
../gcc-"${VERSION}"/./configure                               \
  --prefix="${BUILD_DEST_DIR}"                                \
  --with-local-prefix="${BUILD_DEST_DIR}"                     \
  --with-native-system-header-dir="${BUILD_DEST_DIR}"/include \
  --with-sysroot="${BUILD_ROOT_DIR}"                          \
  --with-arch="${STAGE1_CPU}"                                 \
  --with-newlib                                               \
  --without-headers                                           \
  --build="${STAGE1_HOST}"                                    \
  --host="${STAGE1_HOST}"                                     \
  --target="${TARGET_TRIPLET}"                                \
  --disable-nls                                               \
  --disable-shared                                            \
  --disable-multilib                                          \
  --disable-decimal-float                                     \
  --disable-threads                                           \
  --disable-libatomic                                         \
  --disable-libgomp                                           \
  --disable-libitm                                            \
  --disable-libquadmath                                       \
  --disable-libsanitizer                                      \
  --disable-libssp                                            \
  --disable-libstdcxx                                         \
  --disable-libvtv                                            \
  --enable-clocale=generic                                    \
  --enable-languages=c 

# Compile the source.
make -j4 all-gcc all-target-libgcc
make install-gcc install-target-libgcc

# Cleanup.
cd ..
rm -rf build

